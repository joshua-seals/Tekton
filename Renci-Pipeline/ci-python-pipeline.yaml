# This manifest pipeline takes advantage of tekton hub tasks that already exist.
#  tkn hub install task kaniko
#  tkn hub install task pytest
#

apiVersion: tekton.dev/v1beta1
kind: Pipeline 
metadata: 
  name: ci-python-pipeline
spec:
  description: >-
   This pipeline pulls source code from a repo triggered by pull request, 
   runs pytest and flake8 in parallel, and success of both will
   build dockerfile using kaniko then push image to a registry. 
   Finally the pipeline performs clean up removing data from 
   persistant volume claim used in the workspace tasks 
   and sets corresponding github status
   on the associated sha of the pull request ["success" or "failure"].

   Assumptions prior to using this pipeline and associated tasks: 
   1 ) A pvc is set in the namespace used by tekton - associated with workspace "shared-data"
   2 ) A github personal access token (fine grained) has been set inside of a kubernetes secret object for 
      the associated repo in which to run these tests. 
      The Access Token must have "read and write access to commit statuses" permissions.
   3 ) A docker-credential secret kubernetes object exists for a repo and is available to tekton.

  params:
    - name: repo-url
      type: string
      default: "https://github.com/joshua-seals/tycho-testing"
    - name: image
      type: string
    - name: versionTag
      type: string
    - name: pytest-path
      type: string 
      default: "tests"
      description: "Testing directory for pytest."
    - name: requirements_file
      type: string
      default: "requirements.txt"
      description: "Path to requirements.txt file"
    - name: flake-path
      type: string 
      description: "Application directory to run flake8 linter."
    # - name: "STATE"
    #   type: "failure"
    # - name: "REPO_FULL_NAME"
    #   type: "joshua-seals/tycho-testing"
    # - name: "GITHUB_TOKEN_SECRET_NAME"
    #   type: github-pat
    # - name: "GITHUB_TOKEN_SECRET_KEY"
    #   type: github-pat
    # - name: "SHA"
    #   type: "31e4bf6c03143ef465579458859490cbde250fad"
    # - name: "TARGET_URL"
    #   type: "https://tekton-cicd.com/tekton-cd"
    # - name: "CONTEXT"
    #   type: "tekton-pipeline"
    # - name: "DESCRIPTION"
    #   type: string

  workspaces: 
    - name: shared-data
    - name: docker-credentials
  #
  ########### CLONE SOURCE REPO #############
  tasks:
    - name: clone-source
      taskRef:
        name: clone
      params:
        - name: url 
          value: $(params.repo-url)
      workspaces:
        - name: output
          workspace: shared-data
    #
    ############# PYTEST ###############
    - name: unit-test
      taskRef: 
        name: pytest
      params:
        - name: SOURCE_PATH 
          #value: "./source/$(params.pytest-path)"
          value: "$(params.pytest-path)"
        - name: REQUIREMENTS_FILE
          #value: "./source/$(params.requirements_file)"
          value: "$(params.requirements_file)"
      workspaces:
        - name: source
          workspace: shared-data 
      runAfter:
        - "clone-source"
    # 
    # ########### FLAKE8 #################
    # - name: linter
    #   taskRef: 
    #     name: flake8-custom
    #   workspaces:
    #     - name: source
    #       workspace: shared-data 
    #   params:
    #     - name: path
    #       #value: "./source/$(params.flake-path)"
    #       value: "$(params.flake-path)"
    #     - name: requirements_file
    #       #value: "./source/$(params.requirements_file)"
    #       value: "$(params.requirements_file)"
    #   runAfter:
    #     - "clone-source"
    #
    ############## KANIKO ############
    - name: build-and-push
      taskRef:
        name: kaniko
      workspaces:
        - name: dockerconfig
          workspace: docker-credentials
        - name: source
          workspace: shared-data
      params:
        - name: IMAGE
          value: $(params.image):$(params.versionTag)
        # - name: CONTEXT
        #   value: "."
      runAfter: ["unit-test"]
    #
# #
########## FINALLY POST ALERT AND CLEANUP TASKS ###################
  finally:
    ############## GITHUB ALERT FAIL ################
    # - name: report-pipeline-failure-to-github
    #   when:
    #     - input: $(tasks.status)
    #       operator: in 
    #       values: ["Failed", "None"]
    #       # see aggregated status https://tekton.dev/docs/pipelines/pipelines/#using-aggregate-execution-status-of-all-tasks
    #   taskRef:
    #     name: github-set-status-cust
    #   params:
    #     - name: "STATE"
    #       value: "failure"
    #     - name: "REPO_FULL_NAME"
    #       value: "joshua-seals/tycho-testing"
    #     - name: "GITHUB_TOKEN_SECRET_NAME"
    #       value: github-pat
    #     - name: "GITHUB_TOKEN_SECRET_KEY"
    #       value: github-pat
    #     - name: "SHA"
    #       value: "31e4bf6c03143ef465579458859490cbde250fad"
    #     - name: "TARGET_URL"
    #       value: "https://tekton-cicd.com/tekton-cd"
    #     - name: "CONTEXT"
    #       value: "tekton-pipeline"
    #     - name: "DESCRIPTION"
    #       value: "An error occurred building your commit in Tekton"
    # ############## GITHUB ALERT SUCCESS ################
    # - name: report-pipeline-success-to-github
    #   when:
    #       - input: $(tasks.status)
    #         operator: in
    #         values: [ "Succeeded", "Completed" ] 
    #   taskRef:
    #     name: github-set-status-cust
    #   params:
    #     - name: "STATE"
    #       value: "success"
    #     - name: "REPO_FULL_NAME"
    #       value: "$(params.REPO_PATH_ONLY)"
    #     - name: "GITHUB_TOKEN_SECRET_NAME"
    #       value: "github-api-secret"
    #     - name: "GITHUB_TOKEN_SECRET_KEY"
    #       value: "token"
    #     - name: "SHA"
    #       value: "$(params.SOURCE_REVISION)"
    #     - name: "TARGET_URL"
    #       value: "$(params.TEKTON_DASHBOARD_HOST)/#/namespaces/default/pipelineruns/$(context.pipelineRun.name)"
    #     - name: "CONTEXT"
    #       value: "tekton-pipeline"
    #     - name: "DESCRIPTION"
    #       value: "Finished building your commit in Tekton"
    ########## CLEANUP PVC DATA ################
    - name: cleanup
      taskRef:
        name: cleanup
      workspaces:
        - name: source
          workspace: shared-data